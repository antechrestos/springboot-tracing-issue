services:
  mongo:
    image: bitnami/mongodb:5.0
    environment:
      # see configuration here:
      # https://github.com/bitnami/containers/tree/main/bitnami/mongodb#setting-up-replication
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_DATABASE=${MONGODB_DATABASE_NAME}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - tracing-issue
    healthcheck:
      test: [ "CMD", "mongosh", "-p", "${MONGODB_PASSWORD}", "-u", "root", "--eval", "'db.getReplicationInfo()'" ]

  monitoring-grafana:
    image: grafana/grafana-oss:9.3.2
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/default.yaml:ro
    networks:
      - tracing-issue

  monitoring-tempo:
    image: grafana/tempo:1.5.0
    command: --config.file=/etc/tempo/config.yml
    volumes:
      - ./config/tempo.yml:/etc/tempo/config.yml:ro
    networks:
      - tracing-issue

  monitoring-prometheus:
    image: bitnami/prometheus:2.41.0
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - tracing-issue

  monitoring-otel-collector:
    image: otel/opentelemetry-collector-contrib:0.69.0
    command: [ "--config=/etc/otel-collector/config.yml" ]
    ports:
      - "4318:4318"
    volumes:
      - ./config/otel-collector.yml:/etc/otel-collector/config.yml
    networks:
      - tracing-issue

# for open id connect
# see https://hub.docker.com/r/qlik/simple-oidc-provider/ ?
# or https://hub.docker.com/r/soluto/oidc-server-mock
# or https://hub.docker.com/r/bitnami/keycloak

volumes:
  mongo-data:
  rabbitmq-data:
networks:
  tracing-issue:

